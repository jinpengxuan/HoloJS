<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{2A23D510-7508-4ABE-B21C-1EDF155EBF24}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>holoJsLib</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17134.0</WindowsTargetPlatformVersion>
    <ProjectName>win32-component</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)out\$(Configuration)\$(Platform)\native\</OutDir>
    <TargetName>libholojs-native</TargetName>
    <IntDir>build\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <LinkIncremental>true</LinkIncremental>
    <TargetName>libholojs-native</TargetName>
    <OutDir>$(SolutionDir)out\$(Configuration)\$(Platform)\native\</OutDir>
    <IntDir>build\$(Platform)\$(Configuration)\</IntDir>
    <LibraryWPath>..\packages\Win2D.uwp.1.23.0\lib\uap10.0;$(WindowsSDK_MetadataPath);</LibraryWPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)out\$(Configuration)\$(Platform)\native\</OutDir>
    <IntDir>build\$(Platform)\$(Configuration)\</IntDir>
    <TargetName>libholojs-native</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)out\$(Configuration)\$(Platform)\native\</OutDir>
    <TargetName>libholojs-native</TargetName>
    <IntDir>build\$(Platform)\$(Configuration)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>LIBHOLOJS_WIN32;_DEBUG;HOLOJSLIB_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalUsingDirectories>$(VC_LibraryPath_VC_x86_Store)\references\;C:\Program Files (x86)\Windows Kits\10\UnionMetadata\$(TargetPlatformVersion);</AdditionalUsingDirectories>
      <CompileAsWinRT>true</CompileAsWinRT>
      <AdditionalOptions>/Zc:twoPhase- %(AdditionalOptions)</AdditionalOptions>
      <PrecompiledHeaderFile>stdafx.h</PrecompiledHeaderFile>
      <AdditionalIncludeDirectories>..\..\..\deps\ChakraCore-Debugger\lib\Debugger.ProtocolHandler;..\..\..\deps\ChakraCore-Debugger\lib\Debugger.Service;..\..\..\deps\angle-google\include;..\context2d-lib\include;..\..\..\core\include;..\common-lib\include;..\..\..\deps\ChakraCore\lib\Jsrt</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp17</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <ForcedUsingFiles>..\..\..\deps\Win2D\bin\uapx86\debug\MergedWinMD\Microsoft.Graphics.Canvas.winmd;</ForcedUsingFiles>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll.lib;..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll.lib;..\..\..\deps\win2d\bin\uap$(PlatformTarget)\$(Configuration)\winrt.lib.uap\winrt.lib;..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.ProtocolHandler.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.Protocol.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.Service.lib;..\..\..\deps\zxing-cpp\core\build\$(Platform)-$(Configuration)\ZXingCore.lib;$(OutDir)..\core\context2d-lib.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\ZipLib.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\bzip2.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\lzma.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\zlib.lib;Comctl32.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\LabSound_d.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\libnyquist_d.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\libwavpack_d.lib;dwrite.lib;d2d1.lib;d3d11.lib;dxgi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;shcore.lib;d3dcompiler.lib;mfuuid.lib;windowscodecs.lib;Mmdevapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll.pdb $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll.pdb $(OutDir)
copy ..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.dll $(OutDir)
copy ..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.pdb $(OutDir)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>LIBHOLOJS_WIN32;WIN32;_DEBUG;HOLOJSLIB_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalUsingDirectories>$(VC_LibraryPath_VC_x86_Store)\references\;C:\Program Files (x86)\Windows Kits\10\UnionMetadata\$(TargetPlatformVersion)</AdditionalUsingDirectories>
      <CompileAsWinRT>true</CompileAsWinRT>
      <AdditionalOptions>/Zc:twoPhase- %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>..\..\..\deps\ChakraCore-Debugger\lib\Debugger.ProtocolHandler;..\..\..\deps\ChakraCore-Debugger\lib\Debugger.Service;..\..\..\deps\angle-google\include;..\context2d-lib\include;..\..\..\core\include;..\common-lib\include;..\..\..\deps\ChakraCore\lib\Jsrt</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <ForcedUsingFiles>..\..\..\deps\Win2D\bin\uapx86\debug\MergedWinMD\Microsoft.Graphics.Canvas.winmd;</ForcedUsingFiles>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll.lib;..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll.lib;..\..\..\deps\win2d\bin\uap$(PlatformTarget)\$(Configuration)\winrt.lib.uap\winrt.lib;..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.ProtocolHandler.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.Protocol.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.Service.lib;..\..\..\deps\zxing-cpp\core\build\$(Platform)-$(Configuration)\ZXingCore.lib;$(OutDir)..\core\context2d-lib.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\ZipLib.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\bzip2.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\lzma.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\zlib.lib;Comctl32.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\LabSound_d.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\libnyquist_d.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\libwavpack_d.lib;dwrite.lib;d2d1.lib;d3d11.lib;dxgi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;shcore.lib;d3dcompiler.lib;mfuuid.lib;windowscodecs.lib;Mmdevapi.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll.pdb $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll.pdb $(OutDir)
copy ..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.dll $(OutDir)
copy ..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.pdb $(OutDir)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>LIBHOLOJS_WIN32;WIN32;NDEBUG;HOLOJSLIB_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>..\..\..\deps\ChakraCore-Debugger\lib\Debugger.ProtocolHandler;..\..\..\deps\ChakraCore-Debugger\lib\Debugger.Service;..\..\..\deps\angle-google\include;..\context2d-lib\include;..\..\..\core\include;..\common-lib\include;..\..\..\deps\ChakraCore\lib\Jsrt</AdditionalIncludeDirectories>
      <AdditionalUsingDirectories>$(VC_LibraryPath_VC_x86_Store)\references\;C:\Program Files (x86)\Windows Kits\10\UnionMetadata\$(TargetPlatformVersion);</AdditionalUsingDirectories>
      <CompileAsWinRT>true</CompileAsWinRT>
      <AdditionalOptions>/Zc:twoPhase- %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <ForcedUsingFiles>..\..\..\deps\Win2D\bin\uapx86\debug\MergedWinMD\Microsoft.Graphics.Canvas.winmd;</ForcedUsingFiles>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll.lib;..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll.lib;..\..\..\deps\win2d\bin\uap$(PlatformTarget)\$(Configuration)\winrt.lib.uap\winrt.lib;..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.ProtocolHandler.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.Protocol.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.Service.lib;..\..\..\deps\zxing-cpp\core\build\$(Platform)-$(Configuration)\ZXingCore.lib;$(OutDir)..\core\context2d-lib.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\ZipLib.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\bzip2.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\lzma.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\zlib.lib;Comctl32.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\LabSound.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\libnyquist.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\libwavpack.lib;dwrite.lib;d2d1.lib;d3d11.lib;dxgi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;shcore.lib;d3dcompiler.lib;mfuuid.lib;windowscodecs.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll.pdb $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll.pdb $(OutDir)
copy ..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.dll $(OutDir)
copy ..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.pdb $(OutDir)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>LIBHOLOJS_WIN32;NDEBUG;HOLOJSLIB_EXPORTS;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalUsingDirectories>$(VC_LibraryPath_VC_x86_Store)\references\;C:\Program Files (x86)\Windows Kits\10\UnionMetadata\$(TargetPlatformVersion);</AdditionalUsingDirectories>
      <CompileAsWinRT>true</CompileAsWinRT>
      <AdditionalOptions>/Zc:twoPhase- %(AdditionalOptions)</AdditionalOptions>
      <AdditionalIncludeDirectories>..\..\..\deps\ChakraCore-Debugger\lib\Debugger.ProtocolHandler;..\..\..\deps\ChakraCore-Debugger\lib\Debugger.Service;..\..\..\deps\angle-google\include;..\context2d-lib\include;..\..\..\core\include;..\common-lib\include;..\..\..\deps\ChakraCore\lib\Jsrt</AdditionalIncludeDirectories>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <ForcedUsingFiles>..\..\..\deps\Win2D\bin\uapx86\debug\MergedWinMD\Microsoft.Graphics.Canvas.winmd;</ForcedUsingFiles>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll.lib;..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll.lib;..\..\..\deps\win2d\bin\uap$(PlatformTarget)\$(Configuration)\winrt.lib.uap\winrt.lib;..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.ProtocolHandler.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.Protocol.lib;..\..\..\deps\ChakraCore-Debugger\build\bin\$(Platform)\$(Configuration)\ChakraCore.Debugger.Service.lib;..\..\..\deps\zxing-cpp\core\build\$(Platform)-$(Configuration)\ZXingCore.lib;$(OutDir)..\core\context2d-lib.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\ZipLib.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\bzip2.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\lzma.lib;..\..\..\deps\ziplib\bin\$(PlatformTarget)\$(Configuration)\zlib.lib;Comctl32.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\LabSound.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\libnyquist.lib;..\..\..\deps\LabSound\build\$(Platform)-$(Configuration)\bin\libwavpack.lib;dwrite.lib;d2d1.lib;d3d11.lib;dxgi.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;shcore.lib;d3dcompiler.lib;mfuuid.lib;windowscodecs.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libEGL.dll.pdb $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll $(OutDir)
copy ..\..\..\deps\angle-google\out\$(Configuration)-$(Platform)\libGLESv2.dll.pdb $(OutDir)
copy ..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.dll $(OutDir)
copy ..\..\..\deps\ChakraCore\Build\VcBuild\bin\$(PlatformTarget)_$(Configuration)\ChakraCore.pdb $(OutDir)</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="debug-protocol-handler.h" />
    <ClInclude Include="debug-service.h" />
    <ClInclude Include="script-debugger.h" />
    <ClInclude Include="win32-base-view.h" />
    <ClInclude Include="win32-embedded-view.h" />
    <ClInclude Include="win32-opengl-context.h" />
    <ClInclude Include="performance-tracker.h" />
    <ClInclude Include="script-resources.h" />
    <ClInclude Include="stdafx.h" />
    <ClInclude Include="targetver.h" />
    <ClInclude Include="win32-platform.h" />
    <ClInclude Include="win32-mixed-reality-context.h" />
    <ClInclude Include="win32-spatial-input.h" />
    <ClInclude Include="win32-timers-implementation.h" />
    <ClInclude Include="win32-view.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="dllmain.cpp" />
    <ClCompile Include="script-debugger.cpp" />
    <ClCompile Include="win32-base-view.cpp" />
    <ClCompile Include="win32-embedded-view.cpp" />
    <ClCompile Include="win32-opengl-context.cpp" />
    <ClCompile Include="stdafx.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Create</PrecompiledHeader>
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="win32-platform.cpp" />
    <ClCompile Include="win32-mixed-reality-context.cpp" />
    <ClCompile Include="win32-spatial-input.cpp" />
    <ClCompile Include="win32-timers-implementation.cpp" />
    <ClCompile Include="win32-view.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="script-resources.rc" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\common-lib\common-lib.vcxproj">
      <Project>{1b87f533-54bd-4de9-b1dc-bffdbf260596}</Project>
    </ProjectReference>
    <ProjectReference Include="..\core-lib\core-lib.vcxproj">
      <Project>{8300855a-47f0-4d5c-b47f-c463aa4f3e78}</Project>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\packages\boost.1.68.0.0\build\boost.targets" Condition="Exists('..\packages\boost.1.68.0.0\build\boost.targets')" />
    <Import Project="..\packages\boost_date_time-vc141.1.68.0.0\build\boost_date_time-vc141.targets" Condition="Exists('..\packages\boost_date_time-vc141.1.68.0.0\build\boost_date_time-vc141.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\boost.1.68.0.0\build\boost.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost.1.68.0.0\build\boost.targets'))" />
    <Error Condition="!Exists('..\packages\boost_date_time-vc141.1.68.0.0\build\boost_date_time-vc141.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost_date_time-vc141.1.68.0.0\build\boost_date_time-vc141.targets'))" />
  </Target>
</Project>